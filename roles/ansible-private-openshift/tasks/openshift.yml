---
- name: install ssh private key
  copy:
#    src: "./secrets/{{ cluster_id }}"
    src: "./secrets/deploy"
    dest: "/root/.ssh/id_rsa"
    owner: root
    mode: 0600
  when: node_type == "master"

#- set_fact: my_keyname="./secrets/{{ cluster_id }}.pub"
- set_fact: my_keyname="./secrets/deploy.pub"

- name: install public ssh key
  authorized_key:
    user: "{{ ec2_username }}"
    key: "{{ lookup('file', my_keyname) }}"
    manage_dir: yes
    state: present

- name: install prerequisites
  yum:
    name: wget,git,net-tools,bind-utils,iptables-services,bridge-utils,bash-completion
    state: present

- name: yum update
  yum: name="*" state=latest

- name: install docker
  yum: name=docker state=present

- name: enable insecure registries
  lineinfile:
    dest: /etc/sysconfig/docker
    regexp: "^# INSECURE_REGISTRY"
    line: "INSECURE_REGISTRY='--insecure-registry 0.0.0.0/0'"
    state: present

- name: set up docker storage
  template:
    src: docker-storage-setup.j2
    dest: /etc/sysconfig/docker-storage-setup
    owner: root
    mode: 0644
  when: node_type == 'node' or node_type == 'master'

#- debug: var=ansible_hostname
#- debug: var=node_type

- name: execute docker-storage-setup
  command: docker-storage-setup
  when: node_type == 'node' or node_type == 'master'

- name: install openshift utils
  yum:
    name: atomic-openshift-utils
    state: present
    disablerepo: epel
  when: node_type == 'master'

##- debug: var=groups
#- debug: var=ansible_hostname
#- debug: var=groups.masters[0]
#- debug: var=

- name: copy ansible.cfg
  copy:
    src: ansible.cfg
    dest: /root/ansible.cfg
    owner: root
    mode: 0600

- name: generate OpenShift Ansible hosts
  template:
    src: openshift_private_hosts.j2
    dest: /root/hosts
    owner: root
    mode: 0644
  when: ansible_hostname.replace('ip-','').replace('-','.') == groups.masters[0]

- name: execute the OpenShift ansible install
  command: ansible-playbook -i /root/hosts /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml
  args:
    chdir: /root
  async: 3600
  poll: 60
  when: ansible_hostname.replace('ip-','').replace('-','.') == groups.masters[0]
